rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /products/{productId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    match /events/{eventId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    match /blogs/{blogId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    match /users/{userId} {
      allow read: if true;
      allow create: if true;
      allow update: if true;
      allow delete: if request.auth != null;
    }
    match /productKeys/{keyId} {
      allow read: if true;
      allow create: if true;
      allow update: if true;
      allow delete: if request.auth != null;
    }
    match /support_chats/{messageId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null 
        && request.resource.data.senderId == request.auth.uid;
      allow update, delete: if false;
    }
    match /chats/{chatId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         resource.data.adminEmail == request.auth.token.email);
      
      match /messages/{messageId} {
        allow read, write: if request.auth != null && 
          get(/databases/$(database)/documents/chats/$(chatId)).data.userId == request.auth.uid ||
          get(/databases/$(database)/documents/chats/$(chatId)).data.adminEmail == request.auth.token.email;
      }
    }
    match /{document=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }
  }
} 